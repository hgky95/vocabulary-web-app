# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node-version: [14.x]
    # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - 
        uses: actions/checkout@v2
        name: Checkout frontend
        with:
          path: vocabulary-web-app
          clean: false
        
      -
        uses: actions/checkout@v2
        name: Checkout backend
        with:
          repository: https://github.com/hgky95/vocabulary-api
          ref: master
          path: vocabulary-api
          token: ${{ secrets.REPO_ACCESS }}
          clean: false
          
      -
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
    
      - 
        name: Build frontend
        run: |
          cd spending-money
          npm ci && npm run build --if-present
      -
        name: Copy file
        run: pwd && ls && cp -rv vocabulary-web-app/dist/* vocabulary-api/public

      - 
        name: Commit files
        run: |
          cd vocabulary-api
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          date > deployment.version
          git status
          git add --all
          git commit -m "Deploy new frontend version `date`" -a
          git push
